import java.text.SimpleDateFormat

plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java-library'
}

group = '$!GROUP_ID'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.deprecation = true
    options.compilerArgs += ['-parameters']
}

jar {
    afterEvaluate {
        manifest {
            attributes 'Implementation-Version': version
            attributes 'Built-Gradle': gradle.gradleVersion
            attributes 'Bundle-DocURL': ''
            attributes 'Build-OS': System.getProperty('os.name')
            //attributes 'Built-By': System.getProperty('user.name')
            attributes 'Built-By': 'wvkity'
            attributes 'Build-Jdk': System.getProperty('java.version')
            attributes 'Build-Timestamp': new SimpleDateFormat('yyyy-MM-dd HH:mm:ss').format(new Date())
        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task mkdir {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

javadoc {
    afterEvaluate {
        configure(options) {
            encoding 'UTF-8'
            charSet 'UTF-8'
            author true
            version true
            failOnError false
            links 'http://docs.oracle.com/javase/8/docs/api'
        }
    }
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

test {
    useJUnitPlatform()
}

task clear(type: Delete) {
    delete 'build', 'target', 'out'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

repositories {
    mavenLocal()
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'https://plugins.gradle.org/m2/' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    jcenter()
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'org.apache.logging.log4j:log4j-api:2.11.2'
    implementation 'com.zaxxer:HikariCP:3.3.1'
    implementation 'cglib:cglib-nodep:3.3.0'
    implementation 'javax.inject:javax.inject:1'
    implementation 'org.aspectj:aspectjweaver:1.9.3'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.alibaba:fastjson:1.2.62'
    implementation 'com.lmax:disruptor:3.4.2'
    implementation 'javax.persistence:javax.persistence-api:2.2'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    $!{DRIVER_REF}
    implementation 'com.wvkity:mybatis-spring-boot-starter:1.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    testCompileOnly 'org.projectlombok:lombok:1.18.10'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testAnnotationProcessor 'org.junit.jupiter:junit-jupiter:5.4.2'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all*.exclude module: 'spring-boot-starter-logging'
    all*.exclude module: 'logback-classic'
    all*.exclude module: 'log4j-over-slf4j'
    all*.exclude module: 'spring-boot-starter-tomcat'
}
